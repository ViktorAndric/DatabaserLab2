// <auto-generated />
using System;
using DatabaserLab2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaserLab2.Migrations
{
    [DbContext(typeof(StoreDBContext))]
    [Migration("20231116141846_secondMigration")]
    partial class secondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabaserLab2.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("('Unknown')");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AuthorId")
                        .HasName("PK__Authors__70DAFC14FD8A943C");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Book", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("ISBN13");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("Published")
                        .HasColumnType("date");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int")
                        .HasColumnName("PublisherID");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Isbn13")
                        .HasName("PK__Books__3BF79E03EC2AA91F");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B74EDC1F2");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B879D01B1E");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF10190DA6E");

                    b.HasIndex("StoreId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Inventory", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("ISBN13");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<int?>("StockLevel")
                        .HasColumnType("int");

                    b.HasKey("Isbn13", "StoreId")
                        .HasName("PK__Inventor__384FB10D5BE17782");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("DatabaserLab2.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Isbn13")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("ISBN13");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF58A47BBF");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Isbn13");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PublisherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("PublisherName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PublisherId")
                        .HasName("PK__Publishe__4C657E4BB446D458");

                    b.ToTable("Publisher", (string)null);
                });

            modelBuilder.Entity("DatabaserLab2.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Adress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StoreName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TelephoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StoreId")
                        .HasName("PK__Stores__3B82F0E11C1EFFAA");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Book", b =>
                {
                    b.HasOne("DatabaserLab2.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Books__AuthorID__4316F928");

                    b.HasOne("DatabaserLab2.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Books__CategoryI__412EB0B6");

                    b.HasOne("DatabaserLab2.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Books__Publisher__4222D4EF");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Employee", b =>
                {
                    b.HasOne("DatabaserLab2.Models.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Employees__Email__52593CB8");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Inventory", b =>
                {
                    b.HasOne("DatabaserLab2.Models.Book", "Isbn13Navigation")
                        .WithMany("Inventories")
                        .HasForeignKey("Isbn13")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__ISBN1__48CFD27E");

                    b.HasOne("DatabaserLab2.Models.Store", "Store")
                        .WithMany("Inventories")
                        .HasForeignKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Store__47DBAE45");

                    b.Navigation("Isbn13Navigation");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Order", b =>
                {
                    b.HasOne("DatabaserLab2.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__4D94879B");

                    b.HasOne("DatabaserLab2.Models.Book", "Isbn13Navigation")
                        .WithMany("Orders")
                        .HasForeignKey("Isbn13")
                        .HasConstraintName("FK__Orders__ISBN13__4E88ABD4");

                    b.HasOne("DatabaserLab2.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("FK__Orders__StoreID__4F7CD00D");

                    b.Navigation("Customer");

                    b.Navigation("Isbn13Navigation");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Book", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DatabaserLab2.Models.Store", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Inventories");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
